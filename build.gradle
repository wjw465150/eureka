buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenLocal()
		maven{ url "http://SVN:8081/nexus/content/groups/public"}
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'org.wjw.EurekaServer'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
	maven{ url "http://SVN:8081/nexus/content/groups/public"}
	mavenCentral()
	jcenter()
}


ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-eureka-server') {
	  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compile('org.slf4j:slf4j-api')
	compile('org.slf4j:slf4j-log4j12')
	compile('commons-logging:commons-logging')

	compile('org.springframework.boot:spring-boot-starter-actuator') {
	  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	compile('org.springframework.boot:spring-boot-starter-security') {
	  exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//bootRun {
//    args = ["--spring.profiles.active=test"]
//}
//@wjw_note 添加接受命令行参数,例如:-PappArgs="--spring.profiles.active=dev"
bootRun {
	if(project.hasProperty("appArgs")){
	  args(appArgs)
	  println "Task args:"+args
	}
}
